// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: shepots.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createShepot = `-- name: CreateShepot :one
INSERT INTO shepots(id, created_at, updated_at, body, user_id)
VALUES (
    gen_random_uuid(),
    NOW(),
    NOW(),
    $1,
    $2
)
RETURNING id, created_at, updated_at, body, user_id
`

type CreateShepotParams struct {
	Body   string
	UserID uuid.UUID
}

func (q *Queries) CreateShepot(ctx context.Context, arg CreateShepotParams) (Shepot, error) {
	row := q.db.QueryRowContext(ctx, createShepot, arg.Body, arg.UserID)
	var i Shepot
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Body,
		&i.UserID,
	)
	return i, err
}

const deleteAllShepots = `-- name: DeleteAllShepots :exec
DELETE FROM users
`

func (q *Queries) DeleteAllShepots(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteAllShepots)
	return err
}
